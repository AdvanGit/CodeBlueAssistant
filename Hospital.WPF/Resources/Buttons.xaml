<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--CheckBox-->

    <Style x:Key="ExpanderChkBoxFlatButton" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource  MahApps.Styles.Button.Flat}">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Padding" Value="7"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="cb.filterbutton" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource BrushPrimaryBorderDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}" 
                            CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                        <Path Data="M15,19.88C15.04,20.18 14.94,20.5 14.71,20.71C14.32,21.1 13.69,21.1 13.3,20.71L9.29,16.7C9.06,16.47 8.96,16.16 9,15.87V10.75L4.21,4.62C3.87,4.19 3.95,3.56 4.38,3.22C4.57,3.08 4.78,3 5,3V3H19V3C19.22,3 19.43,3.08 19.62,3.22C20.05,3.56 20.13,4.19 19.79,4.62L15,10.75V19.88M7.04,5L11,10.06V15.58L13,17.58V10.05L16.96,5H7.04Z" Stretch="Uniform" Height="15" Width="30" HorizontalAlignment="Center" Fill="{DynamicResource BrushAccent1}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource BrushAccent1}"/>
                <Setter Property="Background" Value="{DynamicResource BrushPrimaryPanel}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource BrushAccent1}"/>
                <Setter Property="Background" Value="{DynamicResource BrushPrimaryBorderLight}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource BrushAccent1}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button-->

    <ControlTemplate x:Key="Template.Button.CommonTemplate" TargetType="{x:Type Button}">
        <Grid>
            <mah:ClipBorder x:Name="Border" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            <mah:ClipBorder x:Name="DisabledVisualElement"
                            Background="{DynamicResource BrushPrimaryPanel}"
                            CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            IsHitTestVisible="False"
                            Opacity="0"/>
            <mah:ContentControlEx x:Name="PART_ContentPresenter"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Content="{TemplateBinding Content}" 
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding BorderThickness}" 
                                  Padding="{TemplateBinding Padding}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.8"/>
                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.6"/>
            </Trigger>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)"  From="1.0" To="0.5" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" To="1" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Button.Common" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BrushPrimaryBorderLight}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}"/>
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource Template.Button.CommonTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="Template.Button.Text" TargetType="{x:Type Button}">
        <Grid>
            <mah:ClipBorder x:Name="Border"
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            <mah:ClipBorder x:Name="DisabledVisualElement"
                            Background="{DynamicResource BrushPrimaryPanel}"
                            CornerRadius="{Binding (mah:ControlsHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            IsHitTestVisible="False"
                            Opacity="0"/>
            <mah:ContentControlEx x:Name="PART_ContentPresenter"
                                  ContentTemplate="{TemplateBinding ContentTemplate}" 
                                  Foreground="{TemplateBinding Foreground}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding BorderThickness}" 
                                  Padding="{TemplateBinding Padding}"  
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="PART_ContentPresenter" Value="{Binding (mah:ItemHelper.HoverForegroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Background" TargetName="Border" Value="{Binding (mah:ItemHelper.HoverBackgroundBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.8"/>
                <Setter Property="Opacity" TargetName="PART_ContentPresenter" Value="0.6"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="Button.PathWithText" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Common}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{DynamicResource Template.Button.Text}"/>
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="true">
                        <Setter Property="Foreground" Value="{Binding (mah:ItemHelper.HoverForegroundBrush), RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="true">
                        <Setter Property="Fill" Value="{Binding (mah:ItemHelper.HoverForegroundBrush), RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>