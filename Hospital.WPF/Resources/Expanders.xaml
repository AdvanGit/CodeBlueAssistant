<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#FF333333"/>
    <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
    <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="Black"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyleSch" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource BrushBackgroundPaper}" BorderThickness="0,0,0,1" BorderBrush="{DynamicResource BrushPrimaryBorderLight}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="19"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0" HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            <Path Grid.Column="1" x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" StrokeThickness="2" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ExpanderTemplate" TargetType="{x:Type Expander}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="true">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              Content="{TemplateBinding Header}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              DockPanel.Dock="Top"
                              FontStyle="{TemplateBinding FontStyle}"
                              FontStretch="{TemplateBinding FontStretch}"
                              FontWeight="{TemplateBinding FontWeight}"
                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                              FontFamily="{TemplateBinding FontFamily}"
                              Foreground="{TemplateBinding Foreground}"
                              FontSize="{TemplateBinding FontSize}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              MinHeight="0" MinWidth="0" Margin="0" Padding="4"
                              Style="{StaticResource ExpanderDownHeaderStyleSch}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite"
                                  DockPanel.Dock="Bottom"
                                  Focusable="false"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Visibility="Collapsed">
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="0"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="0"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderHeaderFocusAmbulatory">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="Black"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyleAmb" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Name="exp_head_ambcommon"
                            Background="Transparent"
                            BorderThickness="0,0,0,0"
                            BorderBrush="Transparent">
                        <Grid SnapsToDevicePixels="False">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="0,0,0,0"
                                              RecognizesAccessKey="True" SnapsToDevicePixels="True"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Expander.AmbulatoryMenu" TargetType="{x:Type Expander}">
        <Border Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              Content="{TemplateBinding Header}"
                              Background="{TemplateBinding Background}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              DockPanel.Dock="Top"
                              FontStyle="{TemplateBinding FontStyle}"
                              FontStretch="{TemplateBinding FontStretch}"
                              FontWeight="{TemplateBinding FontWeight}"
                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusAmbulatory}"
                              FontFamily="{TemplateBinding FontFamily}"
                              Foreground="{TemplateBinding Foreground}"
                              FontSize="{TemplateBinding FontSize}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              MinHeight="0" MinWidth="0" Margin="0" Padding="{TemplateBinding Padding}"
                              Style="{StaticResource ExpanderDownHeaderStyleAmb}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Visibility="Collapsed">
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="0"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty=
                               "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty=
                               "(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="0"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderDownHeaderStyleDiag" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" x:Name="b_ExpanderMethod"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,1"
                            BorderBrush="{DynamicResource BrushPrimaryBorderLight}">
                        <Grid SnapsToDevicePixels="False" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="35"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="0" x:Name="arrow" Width="15" Height="15"
                                  Data="{StaticResource treeIconLeft}"
                                  Fill="{DynamicResource BrushAccentInvert}"
                                  SnapsToDevicePixels="false"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="Stretch"
                                              Margin="0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="b_ExpanderMethod" Property="BorderThickness" Value="0"/>
                            <Setter Property="Data" TargetName="arrow" Value="{StaticResource treeIconDown}"/>
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource BrushAccent1}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ExpanderDiagTable" TargetType="{x:Type Expander}">
        <Border x:Name="ExpBorder" Background="{TemplateBinding Background}"
                BorderThickness="0" SnapsToDevicePixels="true">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              Content="{TemplateBinding Header}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              DockPanel.Dock="Top"
                              FontStyle="{TemplateBinding FontStyle}"
                              FontStretch="{TemplateBinding FontStretch}"
                              FontWeight="SemiBold"
                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                              FontFamily="{TemplateBinding FontFamily}"
                              Foreground="{DynamicResource BrushForegroundLight}"
                              FontSize="14"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              MinHeight="0" MinWidth="0" Margin="0" Padding="0"
                              Background="{TemplateBinding Background}"
                              Style="{StaticResource ExpanderDownHeaderStyleDiag}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Visibility="Collapsed">
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="1"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="0"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <Trigger Property="IsExpanded" Value="true">
                <Setter TargetName="ExpBorder" Property="BorderThickness" Value="0"/>
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderDownHeaderStyleLab" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" x:Name="br_labexp"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0 1 0 1"
                            BorderBrush="{DynamicResource BrushPrimaryBorderLight}">
                        <Grid SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="Stretch"
                                              Margin="5,0"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True"
                                              VerticalAlignment="Center"/>
                            <Path Grid.Column="0" x:Name="arrow" Width="15" Height="15"
                                  Data="{StaticResource treeIconLeft}"
                                  Fill="{DynamicResource BrushAccentInvert}"
                                  SnapsToDevicePixels="false"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Left" Margin="20,0,0,0"
                                  VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="{StaticResource treeIconDown}"/>
                            <Setter Property="Fill" TargetName="arrow" Value="{DynamicResource BrushAccent1}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="br_labexp" Value="{DynamicResource BrushBackgroundPaper}"/>
                            <Setter TargetName="br_labexp" Property="BorderThickness" Value="0 1 0 0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ExpanderDiagLabTable" TargetType="{x:Type Expander}">
        <Border x:Name="ExpBorder" 
                BorderThickness="0" SnapsToDevicePixels="true">
            <DockPanel>
                <ToggleButton x:Name="HeaderSite"
                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                              Content="{TemplateBinding Header}"
                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                              DockPanel.Dock="Top"
                              FontStyle="{TemplateBinding FontStyle}"
                              FontStretch="{TemplateBinding FontStretch}"
                              FontWeight="SemiBold"
                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                              FontFamily="{TemplateBinding FontFamily}"
                              Foreground="{TemplateBinding Foreground}"
                              FontSize="{TemplateBinding FontSize}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              MinHeight="0" MinWidth="0" Margin="0" Padding="6"
                              Style="{StaticResource ExpanderDownHeaderStyleLab}"
                              Background="{TemplateBinding Background}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Visibility="Collapsed">
                    <ContentPresenter.LayoutTransform>
                        <ScaleTransform ScaleY="1"/>
                    </ContentPresenter.LayoutTransform>
                </ContentPresenter>
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="0"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                             To="1"
                             Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>