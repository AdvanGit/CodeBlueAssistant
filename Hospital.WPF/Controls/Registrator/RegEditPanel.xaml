<UserControl x:Class="Hospital.WPF.Controls.Registrator.RegEditPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Hospital.WPF.Controls.Registrator"
             xmlns:val="clr-namespace:Hospital.WPF.Services.Validators"
             xmlns:view="clr-namespace:Hospital.WPF.Views"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:vm="clr-namespace:Hospital.ViewModel;assembly=Hospital.ViewModel"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance Type={x:Type vm:RegistratorViewModel}, IsDesignTimeCreatable=True}"
             d:DesignHeight="500" d:DesignWidth="500">
    <UserControl.Resources>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MahApps.Styles.TextBox}">
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="mah:ControlsHelper.CornerRadius" Value="2,2,0,0"/>
            <Setter Property="Background" Value="{StaticResource BrushPrimaryPanel}"/>
            <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{StaticResource Brush.AccentGreen}"/>
            <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{StaticResource Brush.AccentGreen2}"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource BrushForegroundLight}"/>
            <Setter Property="Margin" Value="5,0,0,2"/>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="mah:ControlsHelper.CornerRadius" Value="2,2,0,0"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Background" Value="{StaticResource BrushPrimaryPanel}"/>
            <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{StaticResource Brush.AccentGreen}"/>
            <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{StaticResource Brush.AccentGreen2}"/>
        </Style>
        <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource MahApps.Styles.DatePicker}">
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="mah:ControlsHelper.CornerRadius" Value="2,2,0,0"/>
            <Setter Property="Background" Value="{StaticResource BrushPrimaryPanel}"/>
            <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{StaticResource Brush.AccentGreen}"/>
            <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{StaticResource Brush.AccentGreen2}"/>
        </Style>
    </UserControl.Resources>
    
    <Grid Background="{StaticResource MahApps.Brushes.ThemeBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Border Background="{StaticResource MahApps.Brushes.ThemeBackground}" Grid.RowSpan="3" Grid.ColumnSpan="2" Effect="{StaticResource ShadowCard}"/>
        <Border Background="{DynamicResource Brush.AccentGreen}" Grid.Row="0" Grid.ColumnSpan="2"/>
        <TextBlock Text="РЕДАКТИРОВАТЬ" Foreground="White" Grid.Row="0" Grid.ColumnSpan="2" FontWeight="DemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"/>

        <StackPanel Orientation="Vertical" Grid.Row="1" Margin="20 10 10 10">
            <TextBlock Text="Фамилия"/>
            <TextBox mah:TextBoxHelper.Watermark="Введите фамилию" x:Name="tb_firstName">
                <TextBox.Text>
                    <Binding Path="EditingPatient.FirstName">
                        <Binding.ValidationRules>
                            <val:ProperNounRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Text="Имя"/>
            <TextBox mah:TextBoxHelper.Watermark="Введите имя" x:Name="tb_midName">
                <TextBox.Text>
                    <Binding Path="EditingPatient.MidName">
                        <Binding.ValidationRules>
                            <val:ProperNounRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Text="Отчество"/>
            <TextBox mah:TextBoxHelper.Watermark="Введите отчество" x:Name="tb_lastName">
                <TextBox.Text>
                    <Binding Path="EditingPatient.LastName">
                        <Binding.ValidationRules>
                            <val:ProperNounRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Text="Дата рождения" Grid.Row="0" Grid.Column="0"/>
                <DatePicker Grid.Row="1" Grid.Column="0" Margin="0,0,5,5">
                    <DatePicker.SelectedDate>
                        <Binding Path="BirthDateTime">
                            <Binding.ValidationRules>
                                <val:BirthDateRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </DatePicker.SelectedDate>
                </DatePicker>
                
                <TextBlock Text="Пол" Grid.Row="0" Grid.Column="1" Margin="10,0,0,2"/>
                <ComboBox Grid.Row="1" Grid.Column="1" Margin="5,0,0,5"
                          SelectedItem="{Binding EditingPatient.Gender}"
                          ItemsSource="{Binding Source={StaticResource enum.Gender}}"/>
            </Grid>
            
            <TextBlock Text="ОМС" Grid.Row="2" Grid.ColumnSpan="2"/>
            <ComboBox Grid.Row="3" Grid.Column="0" mah:TextBoxHelper.Watermark="Выберите держателя"
                        ItemsSource="{Binding Belays, IsAsync=True, UpdateSourceTrigger=PropertyChanged}"
                        SelectedValue="{Binding EditingPatient.Belay.Title}"
                        DisplayMemberPath="Title"
                        SelectedValuePath="Title"
                        SelectedItem="{Binding EditingPatient.Belay}"/>
            <TextBlock Text="Номер ОМС" Grid.Row="2" Grid.ColumnSpan="2"/>
            <TextBox Grid.Row="3" Grid.Column="1" IsEnabled="{Binding EditingPatient.Belay, Converter={StaticResource NullToBoolConverter}}">
                <TextBox.Text>
                    <Binding Path="EditingPatient.BelayCode">
                        <Binding.ValidationRules>
                            <val:NumericLenghtRule Min="7" Max="7"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="10 10 20 10">
            <TextBlock Text="Номер телефона 1"/>
            <TextBox x:Name="tb_phoneNum">
                <TextBox.Text>
                    <Binding Path="EditingPatient.PhoneNumber">
                        <Binding.ValidationRules>
                            <val:NumericLenghtRule Min="5" Max="11"/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock Text="Номер телефона 2"/>
            <TextBox IsEnabled="False"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0"  Text="Населенный пункт" />
                <TextBox Grid.Row="1" Grid.Column="0" Text="{Binding EditingPatient.Adress.City}" Margin="0,0,5,5"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="Улица" Margin="10,0,0,2" />
                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding EditingPatient.Adress.Street}" Margin="5,0,0,5"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Дом"/>
                <TextBox Grid.Row="3" Grid.Column="0" Text="{Binding EditingPatient.Adress.Number}" Margin="0,0,5,5"/>
                <TextBlock Grid.Row="2" Grid.Column="1" Text="Квартира" Margin="10,0,0,2"/>
                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding EditingPatient.Adress.Room}" Margin="5,0,0,5"/>
            </Grid>
            <TextBlock Text="Семейное положение"/>
            <ComboBox>
                <ComboBoxItem Content="Состоит в браке" IsSelected="{Binding EditingPatient.IsMarried, UpdateSourceTrigger=PropertyChanged}"/>
                <ComboBoxItem Content="Не состоит в браке">
                    <ComboBoxItem.Style>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditingPatient.IsMarried, Mode=OneWay}" Value="false">
                                    <Setter Property="IsSelected" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBoxItem.Style>
                </ComboBoxItem>
            </ComboBox>
            <TextBlock Text="Наличие детей"/>
            <ComboBox>
                <ComboBoxItem Content="Имеет" IsSelected="{Binding EditingPatient.HasChild, UpdateSourceTrigger=PropertyChanged}"/>
                <ComboBoxItem Content="Не имеет">
                    <ComboBoxItem.Style>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditingPatient.HasChild, Mode=OneWay}" Value="false">
                                    <Setter Property="IsSelected" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBoxItem.Style>
                </ComboBoxItem>
            </ComboBox>
        </StackPanel>

        <Border Grid.Row="2" Grid.ColumnSpan="2" BorderBrush="{StaticResource BrushPrimaryBorderLight}" BorderThickness="0,1,0,0">
            <Grid>
                <Button HorizontalAlignment="Left"  BorderThickness="5,0,0,0" BorderBrush="Transparent"
                        mah:ControlsHelper.FocusBorderBrush="Red"
                        Style="{StaticResource Button.PathWithText}"
                        Foreground="{StaticResource BrushForegroundLight}"
                        mah:ItemHelper.HoverForegroundBrush="Red"
                        Command="{Binding Path=Command.SetBody, RelativeSource={RelativeSource AncestorType={x:Type view:Registrator}}}"
                        CommandParameter="RegPatientTable">
                    <StackPanel Orientation="Horizontal" Margin="0,0,8,0">
                        <Path Data="{StaticResource path.Cancel}" Margin="8"/>
                        <TextBlock Text="ОТМЕНА"/>
                    </StackPanel>
                </Button>
                <Button HorizontalAlignment="Right" Padding="5 0"
                        Foreground="{StaticResource BrushForegroundLight}" BorderThickness="0,0,5,0" BorderBrush="Transparent"
                        mah:ItemHelper.HoverForegroundBrush="{StaticResource Brush.AccentGreen}"
                        mah:ControlsHelper.FocusBorderBrush="{StaticResource Brush.AccentGreen}"
                        Command="{Binding Path=Command.SavePatient, RelativeSource={RelativeSource AncestorType={x:Type view:Registrator}}}">
                    <StackPanel Orientation="Horizontal" Margin="0,0,5,0">
                        <Path Data="{StaticResource path.Save}" Margin="8"/>
                        <TextBlock Text="СОХРАНИТЬ"/>
                    </StackPanel>
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Button.PathWithText}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=tb_firstName, Mode=OneWay, Path=(Validation.HasError)}" Value="false"/>
                                        <Condition Binding="{Binding ElementName=tb_midName, Mode=OneWay, Path=(Validation.HasError)}" Value="false"/>
                                        <Condition Binding="{Binding ElementName=tb_lastName, Mode=OneWay, Path=(Validation.HasError)}" Value="false"/>
                                        <Condition Binding="{Binding ElementName=tb_phoneNum, Mode=OneWay, Path=(Validation.HasError)}" Value="false"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
